# fb15k-237-rotate-1vsAll-kl
job.type: search
search.type: ax
dataset.name: fb15k-237

# training settings (fixed)
train:
  max_epochs: 200
  auto_correct: True
  # create checkpoints every 10 epochs
  checkpoint:
    every: 10
    # keep all checkpoints
    keep: 2000

# validation/evaluation settings (fixed)
valid:
  every: 10
  metric: mean_reciprocal_rank_filtered_with_test
  filter_with_test: True
  # no early stopping
  early_stopping:
    patience: 0
    min_threshold.epochs: 0
    min_threshold.metric_value: 0.0

eval:
  batch_size: 256
  metrics_per.relation_type: True

# model
model: model_with_placeholders

# settings for model_with_placeholders
import: [rotate, model_with_placeholders]
model_with_placeholders.base_model.type: rotate

# rotate requires chunked evaluation
entity_ranking:
  chunk_size: 5000

# training objectives
1vsAll_hybrid.query_types:
  sp_: True       # link prediction 
  _po: True       # link prediction 
  s_o: True       # relation prediction
  s^_: True       # relation classification
  _^o: True       # relation classification
  ^p_: False       # link classification
  _p^: False       # link classification
  s_^: True       # out links
  ^_o: True       # in links

# ax settings: hyperparameter serach space
ax_search:
  num_trials: 30
  num_sobol_trials: 30
  parameters:
    # training hyperparameters
    - name: train.batch_size
      type: fixed   
      value: 128
      is_ordered: True
    - name: train.type
      type: fixed
      value: 1vsAll_hybrid
    - name: train.optimizer
      type: choice
      values: [Adam, Adagrad]
    - name: train.loss
      type: fixed
      value: kl
    - name: train.optimizer_args.lr     
      type: range
      bounds: [0.0003, 1.0]
      log_scale: True
      # no LR scheduler
    - name: train.lr_scheduler
      type: fixed
      value: ""

    # embedding dimension
    - name: lookup_embedder.dim
      type: choice
      values: [128, 256, 512]
      is_ordered: True

    # embedding initialization
    - name: lookup_embedder.initialize
      type: choice
      values: [xavier_normal_, xavier_uniform_, normal_, uniform_]  
    - name: lookup_embedder.initialize_args.normal_.mean
      type: fixed
      value: 0.0
    - name: lookup_embedder.initialize_args.normal_.std
      type: range
      bounds: [0.00001, 1.0]
      log_scale: True
    - name: lookup_embedder.initialize_args.uniform_.a
      type: range
      bounds: [-1.0, -0.00001]
    - name: lookup_embedder.initialize_args.xavier_uniform_.gain
      type: fixed
      value: 1.0
    - name: lookup_embedder.initialize_args.xavier_normal_.gain
      type: fixed
      value: 1.0

    # embedding regularization
    - name: lookup_embedder.regularize
      type: choice
      values: ['', 'l3', 'l2', 'l1']
      is_ordered: True
    - name: lookup_embedder.regularize_args.weighted
      type: choice
      values: [True, False]
    - name: rotate.entity_embedder.regularize_weight
      type: range
      bounds: [1.0e-20, 1.0e-01]
      log_scale: True
    - name: rotate.relation_embedder.regularize_weight
      type: range
      bounds: [1.0e-20, 1.0e-01]
      log_scale: True

    # embedding dropout
    - name: rotate.entity_embedder.dropout
      type: range
      bounds: [-0.5, 0.5]
    - name: rotate.relation_embedder.dropout
      type: range
      bounds: [-0.5, 0.5]

    # training-type specific hyperparameters
    - name: 1vsAll_hybrid.query_weights.sp_
      type: range
      bounds: [0.1, 10.0]
      log_scale: True
    - name: 1vsAll_hybrid.query_weights._po
      type: range
      bounds: [0.1, 10.0]
      log_scale: True
    - name: 1vsAll_hybrid.query_weights.s_o
      type: range
      bounds: [0.1, 10.0]
      log_scale: True
    - name: 1vsAll_hybrid.query_weights.s^_
      type: range
      bounds: [0.1, 10.0]
      log_scale: True
    - name: 1vsAll_hybrid.query_weights._^o
      type: range
      bounds: [0.1, 10.0]
      log_scale: True
    - name: 1vsAll_hybrid.query_weights.s_^
      type: range
      bounds: [0.1, 10.0]
      log_scale: True
    - name: 1vsAll_hybrid.query_weights.^_o
      type: range
      bounds: [0.1, 10.0]
      log_scale: True

    # model-specific entries
    - name: rotate.l_norm
      type: choice
      values: [1.0, 2.0]
      is_ordered: True